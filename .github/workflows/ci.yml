name: CI
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
env:
  VERSION: ${{ secrets.MAJOR_MINOR_VERSION }}.${{ github.run_number }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
        with: { fetch-depth: 100 }
      - uses: actions/setup-dotnet@v1.7.2
        with: { dotnet-version: '5.0' }

      - uses: actions/cache@v2.1.5
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: ${{ runner.os }}-nuget-

      - run: dotnet restore -v n
      - run: dotnet build -p:Version=${{ env.VERSION }} -c Release --no-restore -v n
      - run: dotnet test -v n -c Release --no-restore --no-build -l junit -p:CollectCoverage=true -p:CoverletOutputFormat=opencover
      - uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          files: |
            **/TestResults.xml
        if: always()
      - uses: codecov/codecov-action@v1.5.0
        with:
          files: |
            **/coverage.opencover.xml
        if: always()
      - uses: actions/upload-artifact@v2.2.3
        with:
          name: ci-results
          path: |
            **/TestResults.xml
            **/coverage.opencover.xml
          retention-days: 60
        if: always()

      - name: preparations
        id: preparations
        run: |
          CHANGES=$(git diff --name-only ${{ github.event.before }})
          echo ::set-output name=core-change-count::$(echo $CHANGES | grep -c src/Core)
          echo ::set-output name=diagnostics-change-count::$(echo $CHANGES | grep -c src/Diagnostics)
          echo ::set-output name=messaging-change-count::$(echo $CHANGES | grep -c src/Messaging)
          echo ::set-output name=messaging-web-count::$(echo $CHANGES | grep -c src/Messaging.Web)
          echo ::set-output name=nuget-version::${{ env.VERSION }}-prerelease
          mkdir release-artifacts
      - run: cp -r src/Core release-artifacts/Core
        if:  steps.preparations.outputs.core-change-count != '0'
      - run: cp -r src/Diagnostics release-artifacts/Diagnostics
        if:  steps.preparations.outputs.diagnostics-change-count != '0'
      - run: cp -r src/Messaging release-artifacts/Messaging
        if:  steps.preparations.outputs.messaging-change-count != '0'
      - run: p -r src/Messaging.Web release-artifacts/Messaging.Web
        if:  steps.preparations.outputs.messaging-web-change-count != '0'
      - uses: actions/upload-artifact@v2.2.3
        with:
          name: release-artifacts
          path: release-artifacts
          retention-days: 7

  pre-release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v2.0.9
        with:
          name: release-artifacts
      - uses: actions/create-release@v1
        with:
          tag_name: '${{ env.VERSION }}'
          release_name: 'Release ${{ env.VERSION }}'
          prerelease: true
          body: "commits: ${{ join(github.event.commits.*.message, ' ++ ') }}"
    if: github.event_name == 'push' && needs.build.outputs.change-count != '0'
