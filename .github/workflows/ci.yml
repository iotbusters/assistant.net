name: CI
on:
  push:
    branches: [master]
env:
  VERSION: '${{ secrets.MAJOR_MINOR_VERSION }}.${{ github.run_number }}'
  ALL_PACKAGES: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
        with: { fetch-depth: 100 }
      - uses: actions/setup-dotnet@v1.7.2
        with: { dotnet-version: '5.0' }

      - uses: actions/cache@v2.1.5
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: ${{ runner.os }}-nuget-

      - run: dotnet restore -v n
      - run: dotnet build -p:Version=${{ env.VERSION }} -c Release --no-restore -v n
      - run: dotnet test -v n -c Release --no-restore --no-build -l junit -p:CollectCoverage=true -p:CoverletOutputFormat=opencover
      - uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          files: |
            **/TestResults.xml
        if: always()
      - uses: codecov/codecov-action@v1.5.0
        with:
          files: |
            **/coverage.opencover.xml
        if: always()
      - uses: actions/upload-artifact@v2.2.3
        with:
          name: ci-results
          path: |
            **/TestResults.xml
            **/coverage.opencover.xml
          retention-days: 60
        if: always()

      - name: preparations
        id: preparations
        run: |
          CHANGES=$(git diff --name-only ${{ github.event.commits[0].id }}~1..${{ github.event.after }})
          echo ::set-output name=core-change-count::$(echo $CHANGES | grep -c src/Core)
          echo ::set-output name=storage-change-count::$(echo $CHANGES | grep -c src/Storage)
          echo ::set-output name=diagnostics-change-count::$(echo $CHANGES | grep -c src/Diagnostics)
          echo ::set-output name=messaging-change-count::$(echo $CHANGES | grep -c src/Messaging)
          echo ::set-output name=messaging-web-change-count::$(echo $CHANGES | grep -c src/Messaging.Web)
          echo ::set-output name=messaging-web-client-change-count::$(echo $CHANGES | grep -c src/Messaging.Web.Client)
          echo ::set-output name=messaging-web-server-change-count::$(echo $CHANGES | grep -c src/Messaging.Web.Server)
          echo ::set-output name=total-change-count::$(echo $CHANGES | wc -l)
          mkdir -p release-artifacts/src
          cp LICENSE release-artifacts
      - run: cp -r src/Core release-artifacts/src/Core
        if:  steps.preparations.outputs.core-change-count != '0' || env.ALL_PACKAGES == true
      - run: cp -r src/Storage release-artifacts/src/Storage
        if:  steps.preparations.outputs.storage-change-count != '0' || env.ALL_PACKAGES == true
      - run: cp -r src/Diagnostics release-artifacts/src/Diagnostics
        if:  steps.preparations.outputs.diagnostics-change-count != '0' || env.ALL_PACKAGES == true
      - run: cp -r src/Messaging release-artifacts/src/Messaging
        if:  steps.preparations.outputs.messaging-change-count != '0' || env.ALL_PACKAGES == true
      - run: cp -r src/Messaging.Web release-artifacts/src/Messaging.Web
        if:  steps.preparations.outputs.messaging-web-change-count != '0' || env.ALL_PACKAGES == true
      - run: cp -r src/Messaging.Web release-artifacts/src/Messaging.Web.Client
        if:  steps.preparations.outputs.messaging-web-client-change-count != '0' || env.ALL_PACKAGES == true
      - run: cp -r src/Messaging.Web release-artifacts/src/Messaging.Web.Server
        if:  steps.preparations.outputs.messaging-web-server-change-count != '0' || env.ALL_PACKAGES == true
      - id: count-changes
        run: echo ::set-output name=total-package-prepared-count::$(ls release-artifacts/src | wc -l)
      - uses: actions/upload-artifact@v2.2.3
        with:
          name: release-artifacts
          path: |
            release-artifacts/**/*.csproj
            release-artifacts/**/*.dll
            release-artifacts/**/*.pdb
            release-artifacts/**/*.json
            !release-artifacts/**/obj/**/*.dll
            !release-artifacts/**/obj/**/*.pdb
            release-artifacts/LICENSE
          retention-days: 7
        if: steps.count-changes.outputs.total-package-prepared-count != '0'
    outputs:
      core-change-count: ${{ steps.preparations.outputs.core-change-count }}
      storage-change-count: ${{ steps.preparations.outputs.storage-change-count }}
      diagnostics-change-count: ${{ steps.preparations.outputs.diagnostics-change-count }}
      messaging-change-count: ${{ steps.preparations.outputs.messaging-change-count }}
      messaging-web-change-count: ${{ steps.preparations.outputs.messaging-web-change-count }}
      messaging-web-client-change-count: ${{ steps.preparations.outputs.messaging-web-client-change-count }}
      messaging-web-server-change-count: ${{ steps.preparations.outputs.messaging-web-server-change-count }}
      total-change-count: ${{ steps.preparations.outputs.total-change-count }}
      total-package-prepared-count: ${{ steps.count-changes.outputs.total-package-prepared-count }}

  pre-release:
    runs-on: ubuntu-latest
    needs: build
    steps:
        # ensure the artifact were created to skip empty releases.
      - uses: actions/download-artifact@v2.0.9
        with:
          name: release-artifacts
      - uses: actions/create-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }}
          prerelease: true
          body: |
            <h4>Total packages prepared: ${{ needs.build.outputs.total-package-prepared-count }}</h4>
            <details>
              <summary>Released changes</summary>
              <ul>
                <li>Total: ${{ needs.build.outputs.total-change-count }}</li>
                <li>Core: ${{ needs.build.outputs.core-change-count }}</li>
                <li>Storage: ${{ needs.build.outputs.storage-change-count }}</li>
                <li>Diagnostics: ${{ needs.build.outputs.diagnostics-change-count }}</li>
                <li>Messaging: ${{ needs.build.outputs.messaging-change-count }}</li>
                <li>Messaging.Web: ${{ needs.build.outputs.messaging-web-change-count }}</li>
                <li>Messaging.Web.Client: ${{ needs.build.outputs.messaging-web-client-change-count }}</li>
                <li>Messaging.Web.Server: ${{ needs.build.outputs.messaging-web-server-change-count }}</li>
              </ul>
            </details>
            <details>
              <summary>Commits</summary>
              <ul>
                <li>${{ join(github.event.commits.*.message, '</li><li>') }}</li>
              </ul>
            </details>
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    if: github.event_name == 'push' && needs.build.outputs.total-package-prepared-count != '0'

  # todo: remove once cd workflow started triggering.
  publish-package:
    runs-on: ubuntu-latest
    needs: pre-release
    steps:
      - uses: actions/setup-dotnet@v1.7.2
        with: { dotnet-version: '5.0' }

      - uses: actions/download-artifact@v2.0.9
        with:
          name: release-artifacts

      - uses: actions/cache@v2.1.5
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: ${{ runner.os }}-nuget-

      - name: pack
        run: |
          NUGET_VERSION=${VERSION}-prerelease
          # it cannot find csproj files for some reason
          find . -name *.csproj |
          xargs -i dotnet pack -p:PackageVersion=${NUGET_VERSION} -p:IncludeSymbols=true -p:SymbolPackageFormat=snupkg -o packages -c Release --no-restore --no-build --no-dependencies -v n {}

      - name: publish
        run: |
          API_KEY=${{ secrets.NUGET_API_KEY }}
          find . -name '*.nupkg' |
          xargs -i dotnet nuget push -k ${API_KEY} -s https://api.nuget.org/v3/index.json -t 30 {}

      - uses: actions/upload-artifact@v2.2.3
        with:
          name: packages
          path: |
            **/*.nupkg
            **/*.snupkg
          retention-days: 30
