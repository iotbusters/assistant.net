name: CD
on:
  release:
    branches: [master]
    types: [prereleased, released]

jobs:
  pack-packages:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-dotnet@v1.7.2
        with: { dotnet-version: '5.0' }

      # it duplicates actions/upload-artifact
      # todo: remove once actions/download-artifact supports cross workflow artifacts.
      # https://github.com/actions/toolkit/pull/517
      - uses: actions/cache@v2.1.5
        with:
          path: release-binaries
          key: ${{ runner.os }}-release-binaries-${{ env.VERSION }}
          restore-keys: ${{ runner.os }}-release-binaries-${{ env.VERSION }}
        env:
          VERSION: ${{ github.event.release.tag_name }}

      # todo: replace caching once actions/download-artifact supports cross workflow artifacts
      # https://github.com/actions/toolkit/pull/517
      # - uses: actions/download-artifact@v2.0.9
      #   with:
      #     name: release-binaries

      - uses: actions/cache@v2.1.5
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: ${{ runner.os }}-nuget-

      - name: pack
        run: |
          VERSION=${{ github.event.release.tag_name }}
          NUGET_VERSION=$([ ${{ github.event.release.prerelease }} ] && echo ${VERSION}-prerelease || echo ${VERSION})
          # it cannot find csproj files for some reason
          #find . -name *.csproj |
          find release-binaries -name *.csproj |
          xargs -i dotnet pack -p:PackageVersion=${NUGET_VERSION} --include-source --include-symbols -p:SymbolPackageFormat=snupkg -o packages -c Release --no-restore --no-build --no-dependencies -v n {}

      - uses: actions/upload-artifact@v2.2.3
        with:
          name: release-packages
          path: |
            packages/*.nupkg
            packages/*.snupkg
          retention-days: 30

  publish-packages:
    runs-on: ubuntu-latest
    needs: pack-packages
    steps:
      - uses: actions/setup-dotnet@v1.7.2
        with: { dotnet-version: '5.0' }

      - uses: actions/download-artifact@v2.0.9
        with:
          name: release-packages

      - name: publish
        run: |
          find . -name '*.nupkg' |
          xargs -i dotnet nuget push {} -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json -t 30 --skip-duplicate
